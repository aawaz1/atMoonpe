{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\atmoonpe\\\\src\\\\Charts\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef();\n  useEffect(() => {\n    const svg = d3.select(chartRef.current);\n    const width = 300; // Decreased width\n    const height = 300; // Keep the height the same or adjust as needed\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 40\n    };\n    svg.attr('width', width).attr('height', height);\n    const x = d3.scalePoint().domain(data.map(d => d.month)).range([margin.left, width - margin.right]);\n    const y = d3.scaleLinear().domain([0, d3.max(data, d => Math.max(d.loyal, d.new, d.unique))]).nice().range([height - margin.bottom, margin.top]);\n    const xAxis = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x));\n    const yAxis = g => g.attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(y));\n    const line = d3.line().curve(d3.curveCatmullRom).x(d => x(d.month)).y(d => y(d.value));\n    const colors = {\n      loyal: 'purple',\n      new: 'red',\n      unique: 'green'\n    };\n    const categories = ['loyal', 'new', 'unique'];\n    svg.append('g').call(xAxis);\n    svg.append('g').call(yAxis);\n    categories.forEach(category => {\n      svg.append('path').datum(data.map(d => ({\n        month: d.month,\n        value: d[category]\n      }))).attr('fill', 'none').attr('stroke', colors[category]).attr('stroke-width', 3).attr('d', line);\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","LineChart","data","_s","chartRef","svg","select","current","width","height","margin","top","right","bottom","left","attr","x","scalePoint","domain","map","d","month","range","y","scaleLinear","max","Math","loyal","new","unique","nice","xAxis","g","call","axisBottom","yAxis","axisLeft","line","curve","curveCatmullRom","value","colors","categories","append","forEach","category","datum","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/atmoonpe/src/Charts/LineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst LineChart = ({ data }) => {\r\n  const chartRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(chartRef.current);\r\n    const width = 300; // Decreased width\r\n    const height = 300; // Keep the height the same or adjust as needed\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 40 };\r\n\r\n    svg.attr('width', width).attr('height', height);\r\n\r\n    const x = d3\r\n      .scalePoint()\r\n      .domain(data.map(d => d.month))\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, d => Math.max(d.loyal, d.new, d.unique))])\r\n      .nice()\r\n      .range([height - margin.bottom, margin.top]);\r\n\r\n    const xAxis = g =>\r\n      g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x));\r\n\r\n    const yAxis = g =>\r\n      g.attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(y));\r\n\r\n    const line = d3\r\n      .line()\r\n      .curve(d3.curveCatmullRom)\r\n      .x(d => x(d.month))\r\n      .y(d => y(d.value));\r\n\r\n    const colors = {\r\n      loyal: 'purple',\r\n      new: 'red',\r\n      unique: 'green',\r\n    };\r\n\r\n    const categories = ['loyal', 'new', 'unique'];\r\n\r\n    svg.append('g').call(xAxis);\r\n    svg.append('g').call(yAxis);\r\n\r\n    categories.forEach(category => {\r\n      svg\r\n        .append('path')\r\n        .datum(data.map(d => ({ month: d.month, value: d[category] })))\r\n        .attr('fill', 'none')\r\n        .attr('stroke', colors[category])\r\n        .attr('stroke-width', 3)\r\n        .attr('d', line);\r\n    });\r\n\r\n  }, [data]);\r\n\r\n  return <svg ref={chartRef}></svg>;\r\n};\r\n\r\nexport default LineChart;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}